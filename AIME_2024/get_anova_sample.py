import pandas as pd
import pickle


# ==== 正交表数据 ====
# 2^9 3^4 6^2     n=36
raw_data36 = """
000000000001144
000000000112200
000000000220022
001001011010113
001001011121235
001001011202051
001111100022014
001111100100130
001111100211252
010011111010102
010011111121224
010011111202040
010100110011031
010100110122153
010100110200215
011110001002223
011110001110045
011110001221101
100010101001155
100010101112211
100010101220033
100111010020241
100111010101003
100111010212125
101100111011020
101100111122142
101100111200204
110101001020250
110101001101012
110101001212134
111001100022005
111001100100121
111001100211243
111010010002232
111010010110054
111010010221110
"""


# 2^7 3^4 4^1 6^6     n=72 
raw_data72 = """
000000000000000000
000000001110444444
000000002220222222
000000110023112453
000000111103550231
000000112213334015
000101100201141334
000101101011525112
000101102121303550
001010100003023145
001010101113401523
001010102223245301
001101110022432514
001101111102210352
001101112212054130
001111120110315205
001111121220153043
001111122000531421
010011000112355324
010011001222133102
010011002002511540
010100020202421255
010100021012205033
010100022122043411
010110120211230541
010110121021014325
010110122101452103
011010010121251010
011010011201035454
011010012011413232
011011010210540153
011011011020324531
011011012100102315
011101020123504402
011101021203342240
011101022013120024
100001020120231135
100001021200015513
100001022010453351
100110010122524343
100110011202302121
100110012012140505
100111010213213420
100111011023051204
100111012103435042
101000020201154522
101000021011532300
101000022121310144
101010120212503214
101010121022341052
101010122102125430
101111000111022051
101111001221400435
101111002001244213
110001110021105241
110001111101543025
110001112211321403
110011120113042532
110011121223420310
110011122003204154
110110100000350412
110110101110134250
110110102220512034
111001100202414001
111001101012252445
111001102122030223
111100000003333333
111100001113111111
111100002223555555
111100110020445120
111100111100223504
111100112210001342
"""

# 2^23 3^41 6^1 24^1     n=144 
raw_data144 = """
0000000000001111111111100212121001201201022110022021121012101020312
0000000000001111111111111020202112012012100221100102202120212101512
0000000000001111111111122101010220120120211002211210010201020212112
00000000000100000000000002211002021221012101010210200212202121011 0
00000000000100000000000110022110102002120212121021011020010202123 0
00000000000100000000000221100221210110201020202102122101121010205 0
00010010111000010010111022001111000011222200111122222222001100110 6
00010010111000010010111100112222111122000011222200000000112211222 6
00010010111000010010111211220000222200111122000011111111220022004 6
0001001011111110110100000221012010202021120102211201022121011020218
0001001011111110110100011002120121010102201210022012100202122101418
0001001011111110110100022110201202121210012021100120211010200212018
0001110110101110001001001002211020120120120120121002211002211002521
0001110110101110001001012110022101201201201201202110022110022110121
0001110110101110001001020221100212012012012012010221100221100221321
00011101101100011101101012010221021212100120211010021201010220213 9
00011101101100011101101120121002102020211201022121102012121001025 9
00011101101100011101101201202110210101022012100202210120202112101 9
00100101110000100101110011112200001100112222222211220000220011110 5
00100101110000100101110122220011112211220000000022001111001122222 5
00100101110000100101110200001122220022001111111100112222112200004 5
0010010111011101101000100221012001020212211020122110201212100102217
0010010111011101101000111002120112101020022101200221012020211210417
0010010111011101101000122110201220212101100212011002120101022021017
00101110001000101110001011221122220011110011222222001111222200110 2
00101110001000101110001122002200001122221122000000112222000011222 2
00101110001000101110001200110011112200002200111111220000111122004 2
0010111000111101000111002222001111112200001122221122112200000000414
0010111000111101000111010000112222220011112200002200220011111111014
0010111000111101000111021111220000001122220011110011001122222222214
0011101101001100010010100120120110200212021212101210010210202021520
0011101101001100010010111201201221011020102020212021121021010102120
0011101101001100010010122012012002122101210101020102202102121210320
00111011010100111011010021102012211020121210010221010102022101203 8
00111011010100111011010102210120022101202021121002121210100212015 8
00111011010100111011010210021201100212010102202110202021211020121 8
0100011101101011100010000120120101022021202121012101102001020212523
0100011101101011100010011201201212100102010202120212210112101020123
0100011101101011100010022012012020211210121010201020021220212101323
0100011101110100011101102110201212010221210110201210102020121002311
0100011101110100011101110221012020121002021221012021210101202110511
0100011101110100011101121002120101202110102002120102021212010221111
01001011100001001011100011112200222222220011001100001122111122000 4
01001011100001001011100122220011000000001122112211112200222200112 4
01001011100001001011100200001122111111112200220022220011000011224 4
0100101110011011010001102012100220121002021221010212121010021201216
0100101110011011010001110120211001202110102002121020202121102012416
0100101110011011010001121201022112010221210110202101010202210120016
01011100010001011100010000000000112211221122112211221122112211220 1
01011100010001011100010111111111220022002200220022002200220022002 1
01011100010001011100010222222222001100110011001100110011001100114 1
0101110001011010001110100011222211221122000000001111220022220011413
0101110001011010001110111122000022002200111111112222001100001122013
0101110001011010001110122200111100110011222222220000112211112200213
0110100011101001011100002021210121011020010202122110022101201201315
0110100011101001011100010102021202122101121010200221100212012012515
0110100011101001011100021210102010200212202121011002211020120120115
01101000111101101000111002211002202112101210102001022021021212101 3
01101000111101101000111110022110010220212021210112100102102020213 3
01101000111101101000111221100221121001020102021220211210210101025 3
0111000100100111000100101111111100112222112200002222001111220000410
0111000100100111000100112222222211220000220011110000112222001111010
0111000100100111000100120000000022001111001122221111220000112222210
0111000100111000111011000102021221100221012012010102202120212101222
0111000100111000111011011210102002211002120120121210010201020212422
0111000100111000111011022021210110022110201201202021121012101020022
0111011010001000100101101210010221010102022101200102021221102012519
0111011010001000100101112021121002121210100212011210102002210120119
0111011010001000100101120102202110202021211020122021210110021201319
01110110100101110110100001022021201210022021121012010221121001021 7
01110110100101110110100112100102012021100102202120121002202112103 7
01110110100101110110100220211210120102211210010201202110010220215 7
10001001011010001001011022001111112200001111220000110011222222220 7
10001001011010001001011100112222220011112222001111221122000000002 7
10001001011010001001011211220000001122220000112222002200111111114 7
1000100101110111011010002012100202210120202112102021210101202110219
1000100101110111011010010120211010021201010220210102021212010221419
1000100101110111011010021201022121102012121001021210102020121002019
1000111011000111000100101002211002211002211002210120120120120120522
1000111011000111000100112110022110022110022110021201201201201201122
1000111011000111000100120221100221100221100221102012012012012012322
1000111011011000111011001201022120212101100212010120211010200212310
1000111011011000111011012012100201020212211020121201022121011020510
1000111011011000111011020120211012101020022101202012100202122101110
10010111000010010111000011221122111122002222001111112200001122220 3
10010111000010010111000122002200222200110000112222220011112200002 3
10010111000010010111000200110011000011221111220000001122220011114 3
1001011100010110100011102222001122001111222200110000000011221122415
1001011100010110100011110000112200112222000011221111111122002200015
1001011100010110100011121111220011220000111122002222222200110011215
1010001110100101110001000212121010022110201201200212210121010102313
1010001110100101110001011020202121100221012012011020021202121210513
1010001110100101110001022101010202211002120120122101102010202021113
10100011101110100011101020120120120120120120120120120120120120121 1
10100011101110100011101101201201201201201201201201201201201201203 1
10100011101110100011101212012012012012012012012012012012012012015 1
1011010001100100101110001210010212101020201210021020202112010221516
1011010001100100101110012021121020212101012021102101010220121002116
1011010001100100101110020102202101020212120102210212121001202110316
10110100011110110100011001022021022101200212210121102012210110201 4
10110100011110110100011112100102100212011020021202210120021221013 4
10110100011110110100011220211210211020122101102010021201102002125 4
1011100010001011100010001111111122220011000011220011222200001122411
1011100010001011100010012222222200001122111122001122000011112200011
1011100010001011100010020000000011112200222200112200111122220011211
1011100010010100011101101020202120211210210101020221100212012012223
1011100010010100011101112101010201022021021212101002211020120120423
1011100010010100011101120212121012100102102020212110022101201201023
11000100101011000100101022002200111111111111111122002200220022004 8
11000100101011000100101100110011222222222222222200110011001100110 8
11000100101011000100101211221122000000000000000011221122112211222 8
1100010010110011101101001020202102122101121010202012012021100221220
1100010010110011101101012101010210200212202121010120120102211002420
1100010010110011101101020212121021011020010202121201201210022110020
1101000111000010111000102021210112100102102020211201201210022110314
1101000111000010111000110102021220211210210101022012012021100221514
1101000111000010111000121210102001022021021212100120120102211002114
11010001110111010001110020120120211002211002211002211002211002211 2
11010001110111010001110101201201022110022110022110022110022110023 2
11010001110111010001110212012012100221100221100221100221100221105 2
1101101000100010010111002101102010021201102002122012100220211210517
1101101000100010010111010212210121102012210110200120211001022021117
1101101000100010010111021020021202210120021221011201022112100102317
11011010001111011010001010200212102020212110201202121210012021101 5
11011010001111011010001121011020210101020221012010202021120102213 5
11011010001111011010001202122101021212101002120121010102201210025 5
11100010010011100010010022002200220022002200220011111111111111114 9
11100010010011100010010100110011001100110011001122222222222222220 9
11100010010011100010010211221122112211221122112200000000000000002 9
1110001001010001110110100102021212012012100221101020021202121210221
1110001001010001110110111210102020120120211002212101102010202021421
1110001001010001110110122021210101201201022110020212210121010102021
1110110100000001001011102101102001202110010220210221012002122101518
1110110100000001001011110212210112010221121001021002120110200212118
1110110100000001001011121020021220121002202112102110201221011020318
11101101000111101101000010200212010202121201022120212101100212011 6
11101101000111101101000121011020121010202012100201020212211020123 6
11101101000111101101000202122101202121010120211012101020022101205 6
11111111111011111111111000000000000000000000000000000000000000000 0
11111111111011111111111111111111111111111111111111111111111111112 0
11111111111011111111111222222222222222222222222222222222222222224 0
1111111111110000000000000011222200000000112211222200111100112222412
1111111111110000000000011122000011111111220022000011222211220000012
1111111111110000000000022200111122222222001100111122000022001111212
"""

# ==== 解析正交表 ====
rows36 = [list(line.strip()) for line in raw_data36.strip().split("\n")]
df_raw36 = pd.DataFrame(rows36)
rows72 = [list(line.strip()) for line in raw_data72.strip().split("\n")]
df_raw72 = pd.DataFrame(rows72)
rows144 = [list(line.strip()) for line in raw_data144.strip().split("\n")]
df_raw144 = pd.DataFrame(rows144)

# ==== 因子映射 ====
lang_map = {"0": "alby", "1": "ey", "2": "fy", "3": "ry", "4": "yy", "5": "zw"}
bin_map = {"0": 0, "1": 1}
temp_map = {"0": 0.0, "1": 1.0, "2": 2.0}
tokens_map = {"0": 10, "1": 100, "2": 4000}
top_p_map = {"0": 0.2, "1": 0.6, "2": 1.0}
penalty_map = {"0": -0.5, "1": 0.5, "2": 1.5}

# ==== 列映射 ====
design36 = pd.DataFrame({
    "language": df_raw36[13].map(lang_map),
    "cot": df_raw36[0].map(bin_map),
    "few": df_raw36[1].map(bin_map),
    "mul": df_raw36[2].map(bin_map),
    "question_type": df_raw36[3].map(bin_map),
    "question_tran": df_raw36[4].map(bin_map),
    "Temperature": df_raw36[9].map(temp_map),
    "max_tokens": df_raw36[10].map(tokens_map),
    "top_p": df_raw36[11].map(top_p_map),
    "presence_penalty": df_raw36[12].map(penalty_map)
})

design72 = pd.DataFrame({
    "language": df_raw72[12].map(lang_map),
    "cot": df_raw72[0].map(bin_map),
    "few": df_raw72[1].map(bin_map),
    "mul": df_raw72[2].map(bin_map),
    "question_type": df_raw72[3].map(bin_map),
    "question_tran": df_raw72[4].map(bin_map),
    "Temperature": df_raw72[7].map(temp_map),
    "max_tokens": df_raw72[8].map(tokens_map),
    "top_p": df_raw72[9].map(top_p_map),
    "presence_penalty": df_raw72[10].map(penalty_map)
})

design144 = pd.DataFrame({
    "language": df_raw144[64].map(lang_map),
    "cot": df_raw144[0].map(bin_map),
    "few": df_raw144[1].map(bin_map),
    "mul": df_raw144[2].map(bin_map),
    "question_type": df_raw144[3].map(bin_map),
    "question_tran": df_raw144[4].map(bin_map),
    "Temperature": df_raw144[23].map(temp_map),
    "max_tokens": df_raw144[24].map(tokens_map),
    "top_p": df_raw144[25].map(top_p_map),
    "presence_penalty": df_raw144[26].map(penalty_map)
})

# ==== 转换为 list[dict] ====
design36_list = design36.to_dict(orient="records")
design72_list = design72.to_dict(orient="records")
design144_list = design144.to_dict(orient="records")

# ==== 保存为 pkl ====
with open("L36_design.pkl", "wb") as f:
    pickle.dump(design36_list, f)
with open("L72_design.pkl", "wb") as f:
    pickle.dump(design72_list, f)
with open("L144_design.pkl", "wb") as f:
    pickle.dump(design144_list, f)

print("✅ 已保存为 .pkl (list[dict] 格式)")